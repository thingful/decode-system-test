version: '3'
services:
  postgres:
    build:
      context: ./postgres
    ports:
      - "5432"
    env_file: .env
    volumes:
      - postgres_vol:/var/lib/postgresql/data

  haproxy:
    image: haproxy:1.9.4-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg

  datastore:
    image: decodeproject/iotstore-amd64:v0.4.2
    ports:
      - "8080"
    depends_on:
      - postgres
    env_file:
      - .env
      - datastore.env
    command: [ "server", "--addr", ":8080" ]
    restart: on-failure

  policystore:
    image: decodeproject/policystore-amd64:v0.3.1
    ports:
      - "8082"
    depends_on:
      - postgres
    env_file:
      - .env
      - policystore.env
    command: [ "server", "--addr", ":8082" ]
    restart: on-failure

  encoder:
    image:  decodeproject/iotenc-amd64:v0.2.7
    ports:
      - "8081"
    depends_on:
      - postgres
      - redis
    env_file:
      - .env
      - encoder.env
    command: [ "server", "--addr", ":8081", "--datastore", "https://datastore.decodeproject.eu" ]
    restart: on-failure

  prometheus:
    image: prom/prometheus:v2.2.1
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090"

  grafana:
    image: grafana/grafana:5.1.3
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/prometheus.yaml:/etc/grafana/provisioning/datasources/prometheus.yaml
      - grafana_vol:/var/lib/grafana
    depends_on:
      - prometheus

  redis:
    image: redis:5-alpine

  pg_exporter:
    image: wrouesnel/postgres_exporter:latest
    ports:
      - "9187"
    env_file: .env
    depends_on:
      - postgres

  redis_exporter:
    image: oliver006/redis_exporter
    ports:
      - "9121"
    depends_on:
      - redis
    environment:
      - REDIS_ADDR=redis://redis:6379

volumes:
  postgres_vol:
  grafana_vol:
